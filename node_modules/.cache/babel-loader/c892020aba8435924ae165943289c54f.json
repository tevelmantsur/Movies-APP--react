{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\newTest.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './cards';\n\nfunction Movies() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [value, SetValue] = useState('');\n  const style = {\n    fontSize: \"2rem\",\n    textAlign: \"center\",\n    borderRadius: \"25px\",\n    padding: \"0% 20%\",\n    marginLeft: \"19%\"\n  };\n  const LISTED_API = `https://kitsu.io/api/edge/anime?page[limit]=20&page[offset]=${page}`;\n  const SEARCH_API = `https://kitsu.io/api/edge/anime?filter[text]=$`;\n  useEffect(() => {\n    readData(LISTED_API);\n  }, []);\n\n  const readData = API => {\n    fetch(API).then(res => res.json()).then(data => {\n      setData(data.data);\n    }).then(setIsLoading(false));\n  };\n\n  function handelChange(e) {\n    const valuer = e.target.value;\n    SetValue(valuer);\n    readData(SEARCH_API + valuer);\n\n    if (!valuer) {\n      readData(LISTED_API);\n    }\n  }\n\n  useEffect(() => {\n    const dataUpdate = async () => {\n      window.addEventListener('scroll', function () {\n        if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 80) {\n          setPage(prev => prev + 20);\n          setIsLoading(false);\n        }\n      });\n    };\n\n    dataUpdate();\n  }, [page]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: style,\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Search...\",\n    onScroll: dataUpdate(),\n    onChange: e => {\n      handelChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, value)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }\n  }, isLoading ? 'Loading...' : data.map(e => /*#__PURE__*/React.createElement(Card, {\n    key: e.id,\n    id: e.id,\n    name: e.attributes.canonicalTitle,\n    img: e.attributes.posterImage.small,\n    description: e.attributes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default Movies;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/newTest.jsx"],"names":["React","useState","useEffect","Card","Movies","data","setData","isLoading","setIsLoading","page","setPage","value","SetValue","style","fontSize","textAlign","borderRadius","padding","marginLeft","LISTED_API","SEARCH_API","readData","API","fetch","then","res","json","handelChange","e","valuer","target","dataUpdate","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","prev","map","id","attributes","canonicalTitle","posterImage","small","description"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport Card from './cards'\r\n\r\n\r\nfunction Movies(){\r\n\r\nconst [data , setData] = useState([])\r\nconst [isLoading , setIsLoading] = useState(true)\r\nconst [page ,setPage] = useState(0)\r\nconst [value , SetValue] = useState('')\r\n\r\nconst style={\r\n    fontSize: \"2rem\", \r\n    textAlign: \"center\" ,\r\n    borderRadius:\"25px\",\r\n    padding : \"0% 20%\" ,\r\n    marginLeft:\"19%\"\r\n}\r\n\r\n\r\nconst LISTED_API= `https://kitsu.io/api/edge/anime?page[limit]=20&page[offset]=${page}`\r\nconst SEARCH_API = `https://kitsu.io/api/edge/anime?filter[text]=$`\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n        readData(LISTED_API)    \r\n    \r\n},[])\r\n\r\n\r\nconst readData = (API)=> {\r\n    fetch(API)\r\n     .then((res)=>res.json())\r\n     .then((data)=>{\r\n         setData(data.data)\r\n        })\r\n     .then(setIsLoading(false))\r\n }\r\n \r\n    \r\n\r\nfunction handelChange(e){\r\n    const valuer = e.target.value\r\n        SetValue(valuer)\r\n        readData(SEARCH_API+valuer)\r\n\r\n        if (!valuer){\r\n            readData(LISTED_API)\r\n        }\r\n\r\n    \r\n}\r\n\r\nuseEffect(()=>{\r\n    const dataUpdate = async()=>{\r\n     window.addEventListener('scroll', function() {\r\n       if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight-80){\r\n          setPage((prev) => prev + 20)\r\n         setIsLoading(false)\r\n       }\r\n     })   \r\n    }\r\n    dataUpdate()\r\n },[page]);\r\n\r\nreturn(<div>\r\n\r\n<header>\r\n\r\n   <input style={style} type=\"text\" name=\"name\" placeholder=\"Search...\" onScroll={dataUpdate()} onChange={(e)=>{handelChange(e)}} />\r\n   \r\n   <h1>{value}</h1>\r\n\r\n</header>\r\n\r\n<div className=\"grid-container\">\r\n{isLoading ? 'Loading...' : data.map(e=>\r\n      <Card \r\n      key={e.id}\r\n     id={e.id}\r\n    name={e.attributes.canonicalTitle}\r\n    img={e.attributes.posterImage.small}\r\n    description={e.attributes.description}/>\r\n     \r\n        \r\n       \r\n    )}\r\n\r\n</div>\r\n\r\n\r\n</div>)\r\n}\r\n    export default Movies"]},"metadata":{},"sourceType":"module"}