{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\pagination.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./cards\";\nimport { getData } from \"./newfile\";\n\nfunction Fetch(props) {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [buttom, setButtom] = useState(false);\n  window.addEventListener('scroll', function () {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      setPage(prev => prev + 20); //show loading spinner and make fetch request to api\n    }\n  });\n  buttom === true ? console.log(\"not true\") : console.log(\"true\");\n  useEffect(() => {\n    const dataFetch = async () => {\n      setIsLoading(true);\n      const newAnime = await getData(page);\n      setData(prev => [...prev, ...newAnime]);\n      setIsLoading(false);\n    };\n\n    dataFetch();\n  }, [page]);\n  console.log(data);\n  return isLoading ? 'Loading...' : data.map(e => /*#__PURE__*/React.createElement(\"div\", {\n    key: e.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: e.id,\n    name: e.attributes.canonicalTitle,\n    img: e.attributes.posterImage.small,\n    description: e.attributes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  })));\n}\n\n;\nexport default Fetch;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/pagination.jsx"],"names":["React","useState","useEffect","Card","getData","Fetch","props","data","setData","isLoading","setIsLoading","page","setPage","buttom","setButtom","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","prev","console","log","dataFetch","newAnime","map","e","id","attributes","canonicalTitle","posterImage","small","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,OAAR,QAAsB,WAAtB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAaC,YAAb,IAA6BT,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM,CAACU,IAAD,EAAQC,OAAR,IAAmBX,QAAQ,CAAC,CAAD,CAAjC;AACF,QAAM,CAACY,MAAD,EAAUC,SAAV,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAIAc,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAW;AAC3C,QAAKD,MAAM,CAACE,WAAP,GAAqBF,MAAM,CAACG,OAA7B,IAAyCC,QAAQ,CAACC,IAAT,CAAcC,YAA3D,EAAyE;AAEzET,MAAAA,OAAO,CAAEU,IAAD,IAAQA,IAAI,GAAC,EAAd,CAAP,CAFyE,CAKtE;AACF;AACF,GARD;AAWAT,EAAAA,MAAM,KAAG,IAAT,GAAgBU,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAhB,GAA0CD,OAAO,CAACC,GAAR,CAAY,MAAZ,CAA1C;AACEtB,EAAAA,SAAS,CAAC,MAAI;AACX,UAAMuB,SAAS,GAAG,YAAW;AACzBf,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMgB,QAAQ,GAAG,MAAOtB,OAAO,CAACO,IAAD,CAA/B;AACAH,MAAAA,OAAO,CAAEc,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAW,GAAGI,QAAd,CAAT,CAAP;AACAhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALD;;AAMAe,IAAAA,SAAS;AACX,GARQ,EAQP,CAACd,IAAD,CARO,CAAT;AAUEY,EAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACF,SACAE,SAAS,GAAG,YAAH,GACTF,IAAI,CAACoB,GAAL,CAASC,CAAC,iBACR;AAAK,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,IAAD;AACE,IAAA,EAAE,EAAED,CAAC,CAACC,EADR;AAEE,IAAA,IAAI,EAAED,CAAC,CAACE,UAAF,CAAaC,cAFrB;AAGE,IAAA,GAAG,EAAEH,CAAC,CAACE,UAAF,CAAaE,WAAb,CAAyBC,KAHhC;AAIE,IAAA,WAAW,EAAEL,CAAC,CAACE,UAAF,CAAaI,WAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CADF,CAFA;AAcE;;AAAA;AAEJ,eAAe7B,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./cards\";\r\nimport {getData} from \"./newfile\"\r\nfunction Fetch(props) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading , setIsLoading] = useState(true)\r\n  const [page , setPage] = useState(0)\r\nconst [buttom , setButtom]= useState(false)\r\n\r\n\r\n\r\nwindow.addEventListener('scroll', function() {\r\n  if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n\r\n  setPage((prev)=>prev+20)\r\n\r\n    \r\n     //show loading spinner and make fetch request to api\r\n  }\r\n});\r\n\r\n\r\nbuttom===true ? console.log(\"not true\") : console.log(\"true\")\r\n  useEffect(()=>{\r\n     const dataFetch = async ()=> {\r\n         setIsLoading(true)\r\n         const newAnime = await  getData(page)\r\n         setData((prev)=>[...prev , ...newAnime ])\r\n         setIsLoading(false)\r\n     }\r\n     dataFetch()\r\n  },[page])\r\n\r\n    console.log(data)\r\n  return(\r\n  isLoading ? 'Loading...' : \r\n  data.map(e=>\r\n    <div key={e.id}>\r\n  <Card \r\n    id={e.id}\r\n    name={e.attributes.canonicalTitle}\r\n    img={e.attributes.posterImage.small} \r\n    description={e.attributes.description}/>\r\n    </div>\r\n  \r\n   \r\n      )\r\n     \r\n  )};\r\n\r\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}