{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\pagination.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./cards\";\nimport { getData } from \"./newfile\";\n\nfunction Fetch(props) {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(0);\n\n  function HandelScroll(e) {\n    const alfa = window;\n    console.log(alfa + \":offsetHeight\");\n    console.log(document.scrollingElement.scrollTop);\n\n    if (alfa.pageYOffset === 3000) {\n      setPage(page + 20);\n    }\n\n    console.log(alfa.innerHeight + \":ScrollHeight\");\n    console.log(alfa.outerHeight + \":ScrollTop\");\n    console.log(alfa.clientHeight + \":clientHeight\");\n    console.log(alfa);\n  }\n\n  window.addEventListener(\"scroll\", HandelScroll);\n  useEffect(() => {\n    const dataFetch = async () => {\n      setIsLoading(true);\n      const newAnime = await getData(page);\n      setData(prev => [...prev, ...newAnime]);\n      setIsLoading(false);\n    };\n\n    dataFetch();\n  }, [page]);\n  console.log(data);\n  return isLoading ? 'Loading...' : data.map(e => /*#__PURE__*/React.createElement(\"div\", {\n    key: e.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: e.id,\n    name: e.attributes.canonicalTitle,\n    img: e.attributes.posterImage.small,\n    description: e.attributes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  })));\n}\n\n;\nexport default Fetch;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/pagination.jsx"],"names":["React","useState","useEffect","Card","getData","Fetch","props","data","setData","isLoading","setIsLoading","page","setPage","HandelScroll","e","alfa","window","console","log","document","scrollingElement","scrollTop","pageYOffset","innerHeight","outerHeight","clientHeight","addEventListener","dataFetch","newAnime","prev","map","id","attributes","canonicalTitle","posterImage","small","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,OAAR,QAAsB,WAAtB;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAaC,YAAb,IAA6BT,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM,CAACU,IAAD,EAAQC,OAAR,IAAmBX,QAAQ,CAAC,CAAD,CAAjC;;AAEF,WAASY,YAAT,CAAsBC,CAAtB,EAAwB;AACxB,UAAMC,IAAI,GAAGC,MAAb;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,GAAG,eAAnB;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,gBAAT,CAA0BC,SAAtC;;AACI,QAAGN,IAAI,CAACO,WAAL,KAAqB,IAAxB,EAA8B;AAC5BV,MAAAA,OAAO,CAACD,IAAI,GAAC,EAAN,CAAP;AACD;;AACFM,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACQ,WAAL,GAAmB,eAA/B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACS,WAAL,GAAmB,YAA/B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACU,YAAL,GAAoB,eAAhC;AACHR,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACC;;AAEDC,EAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCb,YAAlC;AAEEX,EAAAA,SAAS,CAAC,MAAI;AACX,UAAMyB,SAAS,GAAG,YAAW;AACzBjB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMkB,QAAQ,GAAG,MAAOxB,OAAO,CAACO,IAAD,CAA/B;AACAH,MAAAA,OAAO,CAAEqB,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAW,GAAGD,QAAd,CAAT,CAAP;AACAlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALD;;AAMAiB,IAAAA,SAAS;AACX,GARQ,EAQP,CAAChB,IAAD,CARO,CAAT;AAUEM,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACF,SACAE,SAAS,GAAG,YAAH,GACTF,IAAI,CAACuB,GAAL,CAAShB,CAAC,iBACR;AAAK,IAAA,GAAG,EAAEA,CAAC,CAACiB,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,IAAD;AACE,IAAA,EAAE,EAAEjB,CAAC,CAACiB,EADR;AAEE,IAAA,IAAI,EAAEjB,CAAC,CAACkB,UAAF,CAAaC,cAFrB;AAGE,IAAA,GAAG,EAAEnB,CAAC,CAACkB,UAAF,CAAaE,WAAb,CAAyBC,KAHhC;AAIE,IAAA,WAAW,EAAErB,CAAC,CAACkB,UAAF,CAAaI,WAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CADF,CAFA;AAcE;;AAAA;AAEJ,eAAe/B,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./cards\";\r\nimport {getData} from \"./newfile\"\r\nfunction Fetch(props) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading , setIsLoading] = useState(true)\r\n  const [page , setPage] = useState(0)\r\n\r\nfunction HandelScroll(e){\r\nconst alfa = window\r\n    console.log(alfa + \":offsetHeight\")\r\nconsole.log(document.scrollingElement.scrollTop)\r\n    if(alfa.pageYOffset === 3000 ){\r\n      setPage(page+20)\r\n    }\r\n   console.log(alfa.innerHeight + \":ScrollHeight\") \r\n   console.log(alfa.outerHeight + \":ScrollTop\") \r\n   console.log(alfa.clientHeight + \":clientHeight\") \r\nconsole.log(alfa)\r\n}\r\n\r\nwindow.addEventListener(\"scroll\", HandelScroll)\r\n\r\n  useEffect(()=>{\r\n     const dataFetch = async ()=> {\r\n         setIsLoading(true)\r\n         const newAnime = await  getData(page)\r\n         setData((prev)=>[...prev , ...newAnime ])\r\n         setIsLoading(false)\r\n     }\r\n     dataFetch()\r\n  },[page])\r\n\r\n    console.log(data)\r\n  return(\r\n  isLoading ? 'Loading...' : \r\n  data.map(e=>\r\n    <div key={e.id}>\r\n  <Card \r\n    id={e.id}\r\n    name={e.attributes.canonicalTitle}\r\n    img={e.attributes.posterImage.small} \r\n    description={e.attributes.description}/>\r\n    </div>\r\n  \r\n   \r\n      )\r\n     \r\n  )};\r\n\r\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}