{"ast":null,"code":"import React, { useState } from 'react';\n\nconst useInfiniteScroll = callback => {\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    if (!isFetching) return;\n    callback();\n  }, [isFetching]);\n  return [isFetching, setIsFetching];\n};\n\nexport default useInfiniteScroll;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/useInfinite.jsx"],"names":["React","useState","useInfiniteScroll","callback","isFetching","setIsFetching","useEffect"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,MAAMC,iBAAiB,GAAGC,QAAQ,IAAI;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,KAAD,CAA5C;AACAK,EAAAA,SAAS,CAAC,MAAM;AACb,QAAI,CAACF,UAAL,EAAiB;AACjBD,IAAAA,QAAQ;AACV,GAHQ,EAGN,CAACC,UAAD,CAHM,CAAT;AAIA,SAAO,CAACA,UAAD,EAAaC,aAAb,CAAP;AACD,CAPH;;AAQE,eAAeH,iBAAf","sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst useInfiniteScroll = callback => {\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    useEffect(() => {\r\n       if (!isFetching) return;\r\n       callback();\r\n    }, [isFetching]);\r\n    return [isFetching, setIsFetching];\r\n  };\r\n  export default useInfiniteScroll;"]},"metadata":{},"sourceType":"module"}