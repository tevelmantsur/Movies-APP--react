{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\AllActors.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Slider from 'react-slick';\nimport ActorCard from './ActorCard';\n\nfunction AllActors(props) {\n  const [data, setData] = useState();\n  const API = `https://kitsu.io/api/edge/anime/${props.num}/staff`;\n\n  const readData = API => {\n    fetch(API).then(res => res.json()).then(data => {\n      setData(prev => [...data.data]);\n    });\n  };\n\n  useEffect(() => {\n    readData(API);\n  }, [props.num]);\n  var settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 5,\n    initialSlide: 0,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        initialSlide: 1\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return !data ? \"errorrrrrrrrrrrr\" : /*#__PURE__*/React.createElement(Slider, Object.assign({\n    key: props.num\n  }, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }\n  }), data.map(e => {\n    return /*#__PURE__*/React.createElement(ActorCard, {\n      id: e.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default AllActors;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/AllActors.jsx"],"names":["React","useState","useEffect","Slider","ActorCard","AllActors","props","data","setData","API","num","readData","fetch","then","res","json","prev","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","map","e","id"],"mappings":";AACA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACzB,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAkBP,QAAQ,EAAhC;AAEA,QAAMQ,GAAG,GAAI,mCAAkCH,KAAK,CAACI,GAAI,QAAzD;;AAEA,QAAMC,QAAQ,GAAIF,GAAD,IAAO;AACpBG,IAAAA,KAAK,CAACH,GAAD,CAAL,CACCI,IADD,CACOC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEON,IAAD,IAAQ;AACVC,MAAAA,OAAO,CAACQ,IAAI,IAAI,CAAC,GAAGT,IAAI,CAACA,IAAT,CAAT,CAAP;AACK,KAJT;AAMH,GAPD;;AASAL,EAAAA,SAAS,CAAC,MAAI;AACNS,IAAAA,QAAQ,CAACF,GAAD,CAAR;AACH,GAFI,EAEH,CAACH,KAAK,CAACI,GAAP,CAFG,CAAT;AAKI,MAAIO,QAAQ,GAAG;AACXC,IAAAA,IAAI,EAAE,IADK;AAEXC,IAAAA,QAAQ,EAAE,KAFC;AAGXC,IAAAA,KAAK,EAAE,GAHI;AAIXC,IAAAA,YAAY,EAAE,CAJH;AAKXC,IAAAA,cAAc,EAAE,CALL;AAMXC,IAAAA,YAAY,EAAE,CANH;AAOXC,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,UAAU,EAAE,IADd;AAEER,MAAAA,QAAQ,EAAE;AACRI,QAAAA,YAAY,EAAE,CADN;AAERC,QAAAA,cAAc,EAAE,CAFR;AAGRH,QAAAA,QAAQ,EAAE,IAHF;AAIRD,QAAAA,IAAI,EAAE;AAJE;AAFZ,KADU,EAUV;AACEO,MAAAA,UAAU,EAAE,GADd;AAEER,MAAAA,QAAQ,EAAE;AACRI,QAAAA,YAAY,EAAE,CADN;AAERC,QAAAA,cAAc,EAAE,CAFR;AAGRC,QAAAA,YAAY,EAAE;AAHN;AAFZ,KAVU,EAkBV;AACEE,MAAAA,UAAU,EAAE,GADd;AAEER,MAAAA,QAAQ,EAAE;AACRI,QAAAA,YAAY,EAAE,CADN;AAERC,QAAAA,cAAc,EAAE;AAFR;AAFZ,KAlBU;AAPD,GAAf;AAsCJ,SAAO,CAACf,IAAD,GAAQ,kBAAR,gBACP,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAED,KAAK,CAACI;AAAnB,KAA4BO,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAECV,IAAI,CAACmB,GAAL,CAAUC,CAAD,IAAK;AACZ,wBAAO,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAEA,CAAC,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GAFA,CAFD,CADA;AAOC;;AAED,eAAevB,SAAf","sourcesContent":["\r\nimport React, {useState , useEffect} from 'react'\r\nimport Slider from 'react-slick'\r\nimport ActorCard from './ActorCard'\r\n\r\nfunction AllActors(props){\r\nconst [data , setData]= useState()\r\n\r\nconst API = `https://kitsu.io/api/edge/anime/${props.num}/staff`\r\n\r\nconst readData = (API)=>{\r\n    fetch(API)\r\n    .then((res)=>res.json())\r\n    .then((data)=>{\r\n        setData(prev=> ([...data.data]))\r\n            }) \r\n\r\n}\r\n\r\nuseEffect(()=>{\r\n        readData(API)\r\n    },[props.num])\r\n\r\n    \r\n    var settings = {\r\n        dots: true,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5,\r\n        initialSlide: 0,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 3,\r\n              infinite: true,\r\n              dots: true\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              initialSlide: 1\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n\r\n\r\n\r\nreturn !data ? \"errorrrrrrrrrrrr\" :\r\n<Slider key={props.num} {...settings}>\r\n\r\n{data.map((e)=>{\r\n   return <ActorCard id={e.id}/>\r\n})}\r\n</Slider>\r\n}\r\n\r\nexport default AllActors"]},"metadata":{},"sourceType":"module"}