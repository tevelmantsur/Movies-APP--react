{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\ActorCard.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Slider from 'react-slick';\n\nfunction ActorCard(props) {\n  const [Actor, SetActor] = useState([]);\n  const SINGEL_ACTOR_API = `https://kitsu.io/api/edge/media-staff/${props.id}/person`;\n  useEffect(() => {\n    fetch(SINGEL_ACTOR_API).then(res => res.json()).then(data => {\n      SetActor(prev => [data.data]);\n    });\n  }, []);\n  var settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 5,\n    initialSlide: 0,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        initialSlide: 1\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return !Actor ? \"...Loading\" : /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }), Actor.map(e => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: e.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, e.attributes.name, e.attributes.image ? /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"250px\",\n        height: \"250px\"\n      },\n      src: e.attributes.image.original,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"250px\",\n        height: \"250px\"\n      },\n      src: \"https://www.kindpng.com/picc/m/52-526798_anonymous-person-transparent-hd-png-download.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 104\n      }\n    }));\n  }));\n}\n\nexport default ActorCard;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/ActorCard.jsx"],"names":["React","useState","useEffect","Slider","ActorCard","props","Actor","SetActor","SINGEL_ACTOR_API","id","fetch","then","res","json","data","prev","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","map","e","attributes","name","image","width","height","original"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAIrB,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMO,gBAAgB,GAAI,yCAAwCH,KAAK,CAACI,EAAG,SAA3E;AAGAP,EAAAA,SAAS,CAAC,MAAI;AAEVQ,IAAAA,KAAK,CAACF,gBAAD,CAAL,CACCG,IADD,CACOC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAQ;AACVP,MAAAA,QAAQ,CAACQ,IAAI,IAAI,CAACD,IAAI,CAACA,IAAN,CAAT,CAAR;AACC,KAJL;AAKC,GAPI,EAQJ,EARI,CAAT;AAaI,MAAIE,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,KAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,YAAY,EAAE,CAND;AAObC,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,UAAU,EAAE,IADd;AAEER,MAAAA,QAAQ,EAAE;AACRI,QAAAA,YAAY,EAAE,CADN;AAERC,QAAAA,cAAc,EAAE,CAFR;AAGRH,QAAAA,QAAQ,EAAE,IAHF;AAIRD,QAAAA,IAAI,EAAE;AAJE;AAFZ,KADU,EAUV;AACEO,MAAAA,UAAU,EAAE,GADd;AAEER,MAAAA,QAAQ,EAAE;AACRI,QAAAA,YAAY,EAAE,CADN;AAERC,QAAAA,cAAc,EAAE,CAFR;AAGRC,QAAAA,YAAY,EAAE;AAHN;AAFZ,KAVU,EAkBV;AACEE,MAAAA,UAAU,EAAE,GADd;AAEER,MAAAA,QAAQ,EAAE;AACRI,QAAAA,YAAY,EAAE,CADN;AAERC,QAAAA,cAAc,EAAE;AAFR;AAFZ,KAlBU;AAPC,GAAf;AAoCJ,SAAO,CAACf,KAAD,GAAS,YAAT,gBACN,oBAAC,MAAD,oBAAYU,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACAV,KAAK,CAACmB,GAAN,CAAWC,CAAD,IAAK;AAEjB,wBAAO;AAAM,MAAA,GAAG,EAAEA,CAAC,CAACjB,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACDiB,CAAC,CAACC,UAAF,CAAaC,IADZ,EAETF,CAAC,CAACC,UAAF,CAAaE,KAAb,gBAAqB;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,MAAM,EAAC;AAAvB,OAAZ;AAA4C,MAAA,GAAG,EAAEL,CAAC,CAACC,UAAF,CAAaE,KAAb,CAAmBG,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,gBAAsG;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,MAAM,EAAC;AAAvB,OAAZ;AAA6C,MAAA,GAAG,EAAC,2FAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7F,CAAP;AAIE,GANA,CADA,CADD;AAWH;;AAED,eAAe3B,SAAf","sourcesContent":["import React , {useState , useEffect} from 'react'\r\nimport Slider from 'react-slick'\r\n\r\nfunction ActorCard(props){\r\n\r\n    \r\n\r\n    const [Actor , SetActor] = useState([])\r\n    const SINGEL_ACTOR_API = `https://kitsu.io/api/edge/media-staff/${props.id}/person`\r\n\r\n\r\n    useEffect(()=>{ \r\n\r\n        fetch(SINGEL_ACTOR_API)\r\n        .then((res)=>res.json())\r\n        .then((data)=>{\r\n            SetActor(prev=> ([data.data]))\r\n            }) \r\n        }\r\n        ,[])\r\n\r\n\r\n\r\n\r\n        var settings = {\r\n          dots: true,\r\n          infinite: false,\r\n          speed: 500,\r\n          slidesToShow: 5,\r\n          slidesToScroll: 5,\r\n          initialSlide: 0,\r\n          responsive: [\r\n            {\r\n              breakpoint: 1024,\r\n              settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 3,\r\n                infinite: true,\r\n                dots: true\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1,\r\n                initialSlide: 1\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n              }\r\n            }\r\n          ]\r\n        };\r\n\r\n\r\n    return(!Actor ? \"...Loading\":\r\n     <Slider {...settings}> \r\n    {Actor.map((e)=>{\r\n\r\n   return <div  key={e.id}>\r\n        {e.attributes.name}\r\n{e.attributes.image ? <img style={{width:\"250px\" ,height:\"250px\"}}src={e.attributes.image.original}/> :<img style={{width:\"250px\" ,height:\"250px\"}} src=\"https://www.kindpng.com/picc/m/52-526798_anonymous-person-transparent-hd-png-download.png\"/>}\r\n    </div>\r\n    })} \r\n</Slider>\r\n    )\r\n}\r\n\r\nexport default ActorCard"]},"metadata":{},"sourceType":"module"}