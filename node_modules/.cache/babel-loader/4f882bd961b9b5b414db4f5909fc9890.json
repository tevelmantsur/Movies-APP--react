{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\AnimeApi.jsx\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Anime = () => {\n  const [hasError, setErrors] = useState(false);\n  const [animes, setAnimes] = useState({});\n\n  async function fetchData() {\n    const res = await fetch(\"https://kitsu.io/api/edge/anime/1\");\n    res.json().then(res => setAnimes(res)).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [animes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, JSON.stringify(animes.data)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Has error: \", JSON.stringify(hasError)));\n};\n\nexport default Anime;\n\nconst Fetch = () => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      let res = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\"); // sample\n\n      let response = await res.json();\n      setData(response.disclaimer); // parse json\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, data); //here will be shown data\n};","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/AnimeApi.jsx"],"names":["React","useState","useEffect","Anime","hasError","setErrors","animes","setAnimes","fetchData","res","fetch","json","then","catch","err","JSON","stringify","data","Fetch","setData","response","disclaimer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAGA,iBAAeO,SAAf,GAA2B;AACzB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;AACAD,IAAAA,GAAG,CACAE,IADH,GAEGC,IAFH,CAEQH,GAAG,IAAIF,SAAS,CAACE,GAAD,CAFxB,EAGGI,KAHH,CAGSC,GAAG,IAAIT,SAAS,CAACS,GAAD,CAHzB;AAID;;AAIDZ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEP,CAACF,MAAD,CAFO,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOS,IAAI,CAACC,SAAL,CAAeV,MAAM,CAACW,IAAtB,CAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBF,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAAlB,CAHF,CADF;AAOD,CA1BD;;AA2BA,eAAeD,KAAf;;AAIA,MAAMe,KAAK,GAAG,MAAM;AAChB,QAAM,CAACD,IAAD,EAAOE,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,YAAY;AAC5B,UAAIC,GAAG,GAAG,MAAMC,KAAK,CACnB,mDADmB,CAArB,CAD4B,CAGzB;;AACH,UAAIU,QAAQ,GAAG,MAAMX,GAAG,CAACE,IAAJ,EAArB;AACAQ,MAAAA,OAAO,CAACC,QAAQ,CAACC,UAAV,CAAP,CAL4B,CAKE;AAC/B,KAND;;AAOAb,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAUA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMS,IAAN,CAAP,CAZgB,CAYU;AAC3B,CAbH","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Anime = () => {\r\n  const [hasError, setErrors] = useState(false);\r\n  const [animes, setAnimes] = useState({});\r\n  \r\n\r\n  async function fetchData() {\r\n    const res = await fetch(\"https://kitsu.io/api/edge/anime/1\");\r\n    res\r\n      .json()\r\n      .then(res => setAnimes(res))\r\n      .catch(err => setErrors(err));\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  },[animes]);\r\n\r\n  return (\r\n    <div>\r\n      <span>{JSON.stringify(animes.data)}</span>\r\n      <hr />\r\n      <span>Has error: {JSON.stringify(hasError)}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default Anime;\r\n\r\n\r\n\r\nconst Fetch = () => {\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        let res = await fetch(\r\n          \"https://api.coindesk.com/v1/bpi/currentprice.json\"\r\n        ); // sample\r\n        let response = await res.json();\r\n        setData(response.disclaimer); // parse json\r\n      };\r\n      fetchData();\r\n    }, []);\r\n    return <div>{data}</div>; //here will be shown data\r\n  };"]},"metadata":{},"sourceType":"module"}