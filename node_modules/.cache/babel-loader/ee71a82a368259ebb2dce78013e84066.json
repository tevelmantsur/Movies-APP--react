{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\characters.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport Slider from 'react-slick';\nimport Character from './character';\n\nfunction Characters(props) {\n  const [Characters, SetCharacters] = useState([{\n    data: [],\n    next: []\n  }]);\n  const CHARACTERS_API = `https://kitsu.io/api/edge/anime/${props.num}/characters`;\n  var settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 5,\n    initialSlide: 0,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        initialSlide: 1\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n\n  const readCharacters = API => {\n    fetch(API).then(res => res.json()).then(data => {\n      SetCharacters(prev => ({\n        data: data.data,\n        next: data.links.next\n      }));\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      readCharacters(CHARACTERS_API);\n    }, 1000);\n  }, [props.num]);\n  return !Characters.data ? /*#__PURE__*/React.createElement(SkeletonTheme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    width: \"200px\",\n    height: \"250px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  })) : /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), Characters.data.map(e => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: e.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Character, {\n      id: e.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }));\n}\n\nexport default Characters;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/characters.jsx"],"names":["React","useState","useEffect","Skeleton","SkeletonTheme","Slider","Character","Characters","props","SetCharacters","data","next","CHARACTERS_API","num","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","readCharacters","API","fetch","then","res","json","prev","links","setTimeout","map","e","id"],"mappings":"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","sourcesContent":["import React,{useState , useEffect} from 'react'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\r\nimport Slider from 'react-slick'\r\nimport Character from './character'\r\n\r\nfunction Characters(props){\r\n\r\n\r\n    const [Characters , SetCharacters] = useState([{data:[], next:[]}])\r\n\r\n    \r\n    const CHARACTERS_API = `https://kitsu.io/api/edge/anime/${props.num}/characters`\r\n\r\n\r\n     \r\n    var settings = {\r\n        dots: true,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5,\r\n        initialSlide: 0,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 3,\r\n              infinite: true,\r\n              dots: true\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              initialSlide: 1\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n\r\n\r\n  \r\n    const readCharacters = (API)=>{\r\n        fetch(API)\r\n        .then((res)=>res.json())\r\n        .then((data)=>{\r\n            SetCharacters(prev=> ({\r\n                    data: data.data,\r\n                    next: data.links.next ,\r\n                    }))\r\n                }) \r\n    \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n            readCharacters(CHARACTERS_API)\r\n        }, 1000);\r\n        },[props.num])\r\n   \r\n        \r\n    return !Characters.data ?  <SkeletonTheme>\r\n    <Skeleton width=\"200px\" height=\"250px\"></Skeleton>\r\n</SkeletonTheme> :\r\n    <Slider {...settings}>\r\n{    Characters.data.map((e)=>{\r\n       return <div  key={e.id}> \r\n        <Character id={e.id}/>\r\n   </div>\r\n    })}\r\n    </Slider>\r\n}\r\n\r\nexport default Characters"]},"metadata":{},"sourceType":"module"}