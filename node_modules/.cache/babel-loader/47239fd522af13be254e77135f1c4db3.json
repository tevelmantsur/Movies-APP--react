{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\SingelEpisode.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nfunction SingelEpisode(props) {\n  const [e, sete] = useState([{\n    data: [],\n    next: []\n  }]);\n  const [ClickedMoreEpi, setClickedMoreEpi] = useState(false);\n  const [LoadingEpisode, setLoadingEpisode] = useState(false);\n  const EPISODE_API = `https://kitsu.io/api/edge/anime/${props.num}/episodes`;\n\n  const reade = API => {\n    fetch(API).then(res => res.json()).then(data => {\n      sete(prev => ({\n        data: data.data,\n        next: data.links.next,\n        loaded: true\n      }));\n      console.log(data);\n    });\n  };\n\n  useEffect(() => {\n    reade(EPISODE_API);\n  }, [props.num]);\n\n  function ClickMe(A) {\n    setClickedMoreEpi(true);\n  }\n\n  useEffect(() => {\n    if (ClickedMoreEpi) {\n      fetch(e.next).then(res => res.json()).then(data => {\n        sete(prev => ({ ...prev,\n          data: [...prev.data, ...data.data],\n          next: data.links.next\n        }));\n      }).then(setLoadingEpisode(false));\n    } else return;\n  }, [ClickMe]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, !e.data ? null : e.data.map(e => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: e.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, e.attributes.canonicalTitle ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Episode \", +e.attributes.number), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, e.attributes.canonicalTitle), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, e.attributes.airdate)) : 'this IS a MOive');\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      padding: \"5%\"\n    },\n    onClick: a => {\n      ClickMe(a);\n    },\n    value: props.cardNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Load All episodes\"));\n}\n\nexport default SingelEpisode;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/SingelEpisode.jsx"],"names":["React","useState","useEffect","SingelEpisode","props","e","sete","data","next","ClickedMoreEpi","setClickedMoreEpi","LoadingEpisode","setLoadingEpisode","EPISODE_API","num","reade","API","fetch","then","res","json","prev","links","loaded","console","log","ClickMe","A","map","id","attributes","canonicalTitle","number","airdate","padding","a","cardNumber"],"mappings":"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","sourcesContent":["\r\nimport React,{useState, useEffect} from 'react'\r\n\r\n\r\nfunction SingelEpisode(props){\r\n\r\n\r\n\r\nconst [e , sete] = useState([{data:[], next:[]}])\r\nconst [ClickedMoreEpi , setClickedMoreEpi ] = useState(false)\r\nconst [LoadingEpisode , setLoadingEpisode ] = useState(false)\r\n\r\n\r\nconst EPISODE_API = `https://kitsu.io/api/edge/anime/${props.num}/episodes`\r\n\r\nconst reade = (API)=>{\r\n    fetch(API)\r\n    .then((res)=>res.json())\r\n    .then((data)=>{\r\n            sete(prev=> ({\r\n                data: data.data,\r\n                next: data.links.next ,\r\n                loaded: true\r\n                }))\r\n                console.log(data)\r\n            }) \r\n\r\n}\r\n\r\nuseEffect(()=>{\r\n        reade(EPISODE_API)\r\n    },[props.num])\r\n    \r\n\r\n    function ClickMe(A){\r\n       setClickedMoreEpi(true)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n             if(ClickedMoreEpi){\r\n                fetch(e.next)\r\n                .then((res)=>res.json())\r\n                .then((data)=>{\r\n                    sete((prev => ({...prev, data: [...prev.data ,...data.data], next:data.links.next})))\r\n                    \r\n                })  \r\n            .then(setLoadingEpisode(false))\r\n             }else return \r\n                \r\n      \r\n    }, [ClickMe])\r\n    \r\n\r\n\r\n\r\n    return( <div className=\"grid-container\">\r\n    {!e.data ? null :e.data.map((e)=>{\r\n       return <div key={e.id}> \r\n       {e.attributes.canonicalTitle ? <div> \r\n        <h1>Episode {+e.attributes.number}</h1>\r\n        <h4 >{e.attributes.canonicalTitle}</h4>\r\n        <p>{e.attributes.airdate}</p> \r\n        \r\n        </div> : 'this IS a MOive'}\r\n   </div>\r\n    })}\r\n    <button style={{padding:\"5%\"}} onClick={(a)=>{ClickMe(a)}} value={props.cardNumber}>Load All episodes</button>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default SingelEpisode"]},"metadata":{},"sourceType":"module"}