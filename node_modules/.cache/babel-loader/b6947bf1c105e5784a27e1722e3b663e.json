{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97252\\\\Desktop\\\\New-App\\\\my-app\\\\src\\\\components\\\\pagination.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./cards\";\nimport { getData } from \"./newfile\";\n\nconst Fetch = () => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(0);\n\n  function HandelScroll(e) {\n    console.log(e.target);\n    console.log(e);\n  }\n\n  useEffect(() => {\n    const dataFetch = async () => {\n      setIsLoading(true);\n      const newAnime = await getData(page);\n      setData(prev => [...prev, ...newAnime]);\n      setIsLoading(false);\n    };\n\n    dataFetch();\n  }, [page]);\n  return isLoading ? 'Loading...' : data.map(e => /*#__PURE__*/React.createElement(Card, {\n    onScroll: HandelScroll,\n    id: e.id,\n    name: e.attributes.canonicalTitle,\n    img: e.attributes.posterImage.small,\n    description: e.attributes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Fetch;","map":{"version":3,"sources":["C:/Users/97252/Desktop/New-App/my-app/src/components/pagination.jsx"],"names":["React","useState","useEffect","Card","getData","Fetch","data","setData","isLoading","setIsLoading","page","setPage","HandelScroll","e","console","log","target","dataFetch","newAnime","prev","map","id","attributes","canonicalTitle","posterImage","small","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,OAAR,QAAsB,WAAtB;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAaC,YAAb,IAA6BR,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM,CAACS,IAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC,CAAD,CAAjC;;AAEF,WAASW,YAAT,CAAsBC,CAAtB,EAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;;AAICX,EAAAA,SAAS,CAAC,MAAI;AACX,UAAMe,SAAS,GAAG,YAAW;AACzBR,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,YAAMS,QAAQ,GAAG,MAAOd,OAAO,CAACM,IAAD,CAA/B;AACAH,MAAAA,OAAO,CAAEY,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAAW,GAAGD,QAAd,CAAT,CAAP;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAND;;AAOAQ,IAAAA,SAAS;AACX,GATQ,EASP,CAACP,IAAD,CATO,CAAT;AAYA,SACAF,SAAS,GAAG,YAAH,GACTF,IAAI,CAACc,GAAL,CAASP,CAAC,iBACR,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAA8B,IAAA,EAAE,EAAEC,CAAC,CAACQ,EAApC;AAAwC,IAAA,IAAI,EAAER,CAAC,CAACS,UAAF,CAAaC,cAA3D;AAA2E,IAAA,GAAG,EAAEV,CAAC,CAACS,UAAF,CAAaE,WAAb,CAAyBC,KAAzG;AAAgH,IAAA,WAAW,EAAEZ,CAAC,CAACS,UAAF,CAAaI,WAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFA;AAOE,CA/BJ;;AAiCA,eAAerB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./cards\";\r\nimport {getData} from \"./newfile\"\r\nconst Fetch = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading , setIsLoading] = useState(true)\r\n  const [page , setPage] = useState(0)\r\n\r\nfunction HandelScroll(e){\r\n    console.log(e.target)\r\n    console.log(e)\r\n}\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n     const dataFetch = async ()=> {\r\n         setIsLoading(true)\r\n        \r\n         const newAnime = await  getData(page)\r\n         setData((prev)=>[...prev , ...newAnime ])\r\n         setIsLoading(false)\r\n     }\r\n     dataFetch()\r\n  },[page])\r\n\r\n    \r\n  return(\r\n  isLoading ? 'Loading...' : \r\n  data.map(e=>\r\n    <Card onScroll={HandelScroll} id={e.id} name={e.attributes.canonicalTitle} img={e.attributes.posterImage.small} description={e.attributes.description}/>\r\n   \r\n      )\r\n     \r\n  )};\r\n\r\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}